/*
  1. Use a more-intuitive box-sizing model.
*/
*, *::before, *::after {
  box-sizing: border-box;
}
/*
  2. Remove default margin
*/
* {
  margin: 0;
}
/*
  Typographic tweaks!
  3. Add accessible line-height
  4. Improve text rendering
*/
body {
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
}
/*
  5. Improve media defaults
*/
img, picture, video, canvas, svg {
  display: block;
  max-width: 100%;
}
/*
  6. Remove built-in form typography styles
*/
input, button, textarea, select {
  font: inherit;
}
/*
  7. Avoid text overflows
*/
p, h1, h2, h3, h4, h5, h6 {
  overflow-wrap: break-word;
}
/*
  8. Create a root stacking context
*/
#root, #__next {
  isolation: isolate;
}

main {
  margin: auto;
  max-width: min(1000px, 100% - 4rem);
}

img {
  border-radius: 5px;
  margin: 2rem auto;  
}

form {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1rem;
}
@media (max-width: 600px) {
  form > * {
    grid-column-start: 1;
    grid-column-end: 3;
  }
}

button,
label {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  border: 2px solid grey;
  padding: 1rem;
  border-radius: 5px;
  transition-property: background-color border-color outline-color color;
  transition-duration: 0.1s;
  cursor: pointer;
  overflow: hidden;
}

button {
  justify-content: space-around;
  background-color: transparent;
}

button:focus-visible,
button:hover,
label:has(input:focus-visible),
label:has(input:hover),
label:has(input:checked) {
  --border-color: rgba(63, 132, 229, 1);
  background-color: rgba(63, 132, 229, 0.2);
  border-color: var(--border-color);
  outline: 3px solid var(--border-color);
}
input[type="checkbox"] { visibility: hidden; position: absolute; }
input[type="checkbox"] ~ svg {
  margin-right: 1rem;
  display: none;
}

input[type="checkbox"]:checked ~ .checked { display: initial; }
input[type="checkbox"]:not(:checked) ~ .unchecked { display: initial; }
input[type="checkbox"].true ~ .correct { display: initial; }
input[type="checkbox"].false ~ .incorrect { display: initial; }

label.true { color: green; }
label.false { color: red; }

span.score,
button {
  text-align: center;
  width: 100%;
  margin: 1rem auto;
  padding: 1rem;
}
span.instructions,
button[type="submit"] {
  grid-column-start: 1;
  grid-column-end: 3;
}

label:has(input:disabled) {
  cursor: not-allowed;
  border-color: initial;
  outline: none;
}
